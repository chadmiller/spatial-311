#!/usr/bin/env python3

import subprocess
import tempfile
import re
import sys

_, shapefile, outfile, import_column, import_name, geo_table, geo_column, geo_pk, keyval_table, keyval_table_key, keyval_table_val, keyval_table_link = sys.argv

assert '"' not in import_column
assert '"' not in import_name
assert '"' not in geo_table
assert '"' not in geo_column
assert '"' not in keyval_table
assert '"' not in keyval_table_key
assert '"' not in keyval_table_val

shpconv = subprocess.run(["shp2pgsql", "-a", shapefile, "tablename"], stdout=subprocess.PIPE, check=True, universal_newlines=True)

with open(outfile, "w") as out:
    out.write("BEGIN;\n")
    for line in shpconv.stdout.split("\n"):
        if line.startswith("INSERT "):
            m = re.match(r"""INSERT INTO "tablename" \((.*?)\) VALUES \((.*)\);$""", line)
            if m:
                keys = m.group(1).split(",")
                vals = m.group(2).split(",")

                d = dict(zip(keys, vals))

                out.write("""WITH w AS (INSERT INTO "{0}" ("{1}", "{2}") VALUES ('{3}', '{4}') RETURNING "{5}" AS geo_pk)""".format(geo_table, geo_column, import_column, d.pop("geom")[1:-1], import_name, geo_pk))

                for i, (k, v) in enumerate(d.items()):
                    assert k.startswith('"') and k.endswith('"'), line
                    assert v.startswith("'") and v.endswith("'"), line
                    out.write(""",\n  i{0} AS (INSERT INTO "{1}" ("{2}", "{3}", "{4}") SELECT '{5}', '{6}', geo_pk from w)""".format(i, keyval_table, keyval_table_key, keyval_table_val, keyval_table_link, k[1:-1], v[1:-1], geo_pk))
                out.write("\n  SELECT null AS noise;\n")

            else:
                raise ValueError(line)
    out.write("COMMIT;\n")
