#!/usr/bin/env python3

import sys
import requests
import datetime
import re
import psycopg2

this_year = datetime.datetime.now().year
next_year = this_year + 1
last_year = this_year - 1

topic_name = "Elections in Florida, {}"

_, db_name, = sys.argv

def curex(cursor, command, args):
    print(command % args)
    cur.execute(command, args)

with psycopg2.connect("dbname='{}'".format(db_name)) as conn:
    with conn.cursor() as cur:
        for year in (this_year, last_year, next_year):
            html_doc = requests.post("http://dos.elections.myflorida.com/calendar/", data={ "county":"ALL", "year":str(year) })

            curex(cur, """INSERT INTO topic (name) VALUES (%s) ON CONFLICT DO NOTHING;""", (topic_name.format(year),))
            curex(cur, """UPDATE import SET superceded_at='now' WHERE topic IN (SELECT topic.id FROM topic WHERE name = %s);""", (topic_name.format(year),))
            curex(cur, """INSERT INTO import (source, provenance, topic) SELECT %s, %s, topic.id FROM topic WHERE topic.name=%s RETURNING import.id""", ('http://dos.elections.myflorida.com/calendar/##year='+str(year), html_doc.headers['date'], topic_name.format(year),))
            import_id, = cur.fetchone()

            for month, day, jurisdiction, election_type, county in re.findall(r"""(?mx)<tr> \s+ <td> \s* (\d+)/(\d+)/\d\d \s* </td> \s* <td> \s* ([^<]*?) \s* </td> \s* <td> \s* ([^<]*?) \s* </font> \s* </td> \s* <td> \s* ([^<]*?) \s* </td> \s* </tr>""", html_doc.text):
                if_needed = False

                when = datetime.date(day=int(day), month=int(month), year=year)

                if jurisdiction in {"Pres. Preference Primary", "Primary", "Pres.Preference Primary", "Pres. Preferenc Primary", "Primary Election", "St. Petersburg Primary Elec.", "Municipal Primary Election", "General", "General Election", "Referendum" }:
                    jurisdiction = ""

                if "if needed" in jurisdiction:
                    jurisdiction = re.sub(" -?.if needed.?", "", jurisdiction)

                jurisdiction = re.sub('Altamonte Spring$', 'Altamonte Springs', jurisdiction)
                jurisdiction = re.sub('City fo St. Augustine', 'City of St. Augustine', jurisdiction)
                jurisdiction = re.sub('City if Indian Rocks Beach', 'City of Indian Rocks Beach', jurisdiction)
                jurisdiction = re.sub('Gracevile', 'Graceville', jurisdiction)
                jurisdiction = re.sub('St. Mark City$', 'St. Marks City', jurisdiction)
                jurisdiction = re.sub('Town f Belleair', 'Town of Belleair', jurisdiction)
                jurisdiction = re.sub('Town on Interlanchen', 'Town of Interlanchen', jurisdiction)
                jurisdiction = re.sub('Town or Pierson', 'Town of Pierson', jurisdiction)
                jurisdiction = re.sub('Windemere', 'Windermere', jurisdiction)

                jurisdiction = re.sub("^(?:City of |Town of )?(.*?)( City)?", r"\1", jurisdiction or county)

                county = re.sub(r"[ \.]", r"", county)

                if jurisdiction:
                    curex(cur, """INSERT INTO parcel (import, shape) SELECT %s, p.shape FROM parcel_tags LEFT JOIN parcel AS p ON (parcel_tags.parcel=p.id) LEFT JOIN import i on (i.id=p.import) left join topic on i.topic=topic.id WHERE i.superceded_at IS NULL AND parcel_tags.key='NAME' AND (LOWER(parcel_tags.value)=LOWER(%s) OR LOWER(parcel_tags.value)=LOWER(%s || ' City')) AND topic.name=%s LIMIT 1 RETURNING parcel.id""", (import_id, jurisdiction, jurisdiction, "Florida cities"))

                if not jurisdiction or cur.rowcount == 0:
                    curex(cur, """INSERT INTO parcel (import, shape) SELECT %s, p.shape FROM parcel_tags LEFT JOIN parcel AS p ON (parcel_tags.parcel=p.id) LEFT JOIN import i on (i.id=p.import) left join topic on i.topic=topic.id WHERE i.superceded_at IS NULL AND parcel_tags.key='NAME' AND LOWER(parcel_tags.value)=LOWER(%s) AND topic.name=%s LIMIT 1 RETURNING parcel.id""", (import_id, county, "Florida counties"))

                row = cur.fetchone()
                if not row:
                    print((jurisdiction, county))
                    continue
                else:
                    parcel_id, = row

                curex(cur, """INSERT INTO parcel_tags (parcel, key, value) VALUES (%s, 'Voting day', %s)""", (parcel_id, when.strftime("%Y-%m-%d"),))

                break
